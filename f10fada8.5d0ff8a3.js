(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(125)),o={id:"csv_writer",title:"CsvWriter"},l={unversionedId:"fundamentals/io/csv_writer",id:"fundamentals/io/csv_writer",isDocsHomePage:!1,title:"CsvWriter",description:"Prerequisites:",source:"@site/docs/fundamentals/io/csv_writer.md",slug:"/fundamentals/io/csv_writer",permalink:"/docs/docs/fundamentals/io/csv_writer",editUrl:"https://github.com/spewil/bonsai-rx-docs/edit/main/docs/fundamentals/io/csv_writer.md",version:"current",sidebar:"docs",previous:{title:"MatrixWriter",permalink:"/docs/docs/fundamentals/dsp/matrix_writer"},next:{title:"PylonCapture",permalink:"/docs/docs/fundamentals/pylon/pylon_capture"}},c=[],p={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Prerequisites"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"bonsai IO Library")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Category"),": Sink"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Brief"),": Sinks individual elements of the input sequuence to a text file."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Input")," - Accepts several input types (single elements, tuples, arrays) as long as it comes from a single source node"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Properties"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Append")," (",Object(i.b)("em",{parentName:"li"},"bool"),") - indicates whether data should be appended to the output file if it already exists"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Delimiter")," (",Object(i.b)("em",{parentName:"li"},"string"),") - separator of columns in the output file; if not specified, comma is used"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"FileName")," (",Object(i.b)("em",{parentName:"li"},"ListSeparator"),") - name of the output file or full path to the output file if the desired path is different from the current working directory"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"IncludeHeader")," (",Object(i.b)("em",{parentName:"li"},"bool"),") - indicates whether to include a text header with column names"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ListSeparator")," (",Object(i.b)("em",{parentName:"li"},"string"),") - separator of elements in variable length rows (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Overwrite")," (",Object(i.b)("em",{parentName:"li"},"bool"),") - indicates whether the output file should be overwritten if it already exists"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Selector")," (",Object(i.b)("em",{parentName:"li"},"string"),") - selects a subset of the input's inner properties that will be written to file"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Suffix")," (",Object(i.b)("em",{parentName:"li"},"Bonsai.IO.PathSuffix"),") - optional suffix used to generate file names: ",Object(i.b)("inlineCode",{parentName:"li"},"None"),", ",Object(i.b)("inlineCode",{parentName:"li"},"FileCount"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Timestamp"),"; generates new files even if ",Object(i.b)("inlineCode",{parentName:"li"},"Overwrite")," is set to True")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Output")," - same type as the input"),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("inlineCode",{parentName:"p"},"Runtime Error: A valid file path must be specified")),Object(i.b)("p",{parentName:"div"},"Occurs when the ",Object(i.b)("inlineCode",{parentName:"p"},"FileName")," property is left empty or not specified properly"))))}s.isMDXComponent=!0},125:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),m=r,d=b["".concat(o,".").concat(m)]||b[m]||u[m]||i;return n?a.a.createElement(d,l(l({ref:t},p),{},{components:n})):a.a.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);