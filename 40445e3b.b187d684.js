(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{125:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,d=m["".concat(o,".").concat(u)]||m[u]||s[u]||i;return n?r.a.createElement(d,c(c({ref:t},b),{},{components:n})):r.a.createElement(d,c({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(125)),o={id:"function_generator",title:"FunctionGenerator"},c={unversionedId:"fundamentals/dsp/function_generator",id:"fundamentals/dsp/function_generator",isDocsHomePage:!1,title:"FunctionGenerator",description:"Prerequisites:",source:"@site/docs/fundamentals/dsp/function_generator.md",slug:"/fundamentals/dsp/function_generator",permalink:"/bonsai-rx-docs/docs/fundamentals/dsp/function_generator",editUrl:"https://github.com/spewil/bonsai-rx-docs/edit/main/docs/fundamentals/dsp/function_generator.md",version:"current",sidebar:"docs",previous:{title:"ConvertScale",permalink:"/bonsai-rx-docs/docs/fundamentals/dsp/convert_scale"},next:{title:"MatrixWriter",permalink:"/bonsai-rx-docs/docs/fundamentals/dsp/matrix_writer"}},l=[],b={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Prerequisites"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"bonsai Dsp Library")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Category"),": Source"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Brief"),": Generates signal waveform following any of a set of common periodic functions."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Input")," - Accepts several input types (integer, string, tuple, array)"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Properties"),":"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Amplitude"),"(",Object(i.b)("em",{parentName:"li"},"double"),") - the amplitude of the signal waveform in either direction from zero, e.g. a value of ",Object(i.b)("inlineCode",{parentName:"li"},"1")," produces a waveform in range ",Object(i.b)("inlineCode",{parentName:"li"},"[-1,1]")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"BufferLength")," (",Object(i.b)("em",{parentName:"li"},"int"),") - the number of samples in each output buffer"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Depth")," (",Object(i.b)("em",{parentName:"li"},"System.Nullable","<","OpenCV.Net.Depth",">"),") - target bit depth of individual buffer elements (optional, choose from ",Object(i.b)("inlineCode",{parentName:"li"},"U8"),", ",Object(i.b)("inlineCode",{parentName:"li"},"S8"),", ",Object(i.b)("inlineCode",{parentName:"li"},"U16"),", ",Object(i.b)("inlineCode",{parentName:"li"},"S16"),", ",Object(i.b)("inlineCode",{parentName:"li"},"S32"),", ",Object(i.b)("inlineCode",{parentName:"li"},"F32"),", ",Object(i.b)("inlineCode",{parentName:"li"},"F64"),")"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Frequency")," (",Object(i.b)("em",{parentName:"li"},"double"),") - frequency of the signal waveform in Hz"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Offset")," (",Object(i.b)("em",{parentName:"li"},"double"),") - DC offset of the signal waveform (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Phase")," (",Object(i.b)("em",{parentName:"li"},"double"),") - phase offset of the signal waveform in radians (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"SampleRate")," (",Object(i.b)("em",{parentName:"li"},"int"),") - the number of samples generated in Hz"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Waveform")," (",Object(i.b)("em",{parentName:"li"},"Bonsai.Dsp.FunctionWaveform"),") - the periodic waveform used to sample the signal, choose from ",Object(i.b)("inlineCode",{parentName:"li"},"Sine"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Square"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Triangular"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Sawtooth"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Output")," (",Object(i.b)("em",{parentName:"p"},"OpenCV.Net.Mat"),") - a ",Object(i.b)("inlineCode",{parentName:"p"},"1 x N")," array where ",Object(i.b)("inlineCode",{parentName:"p"},"N")," is ",Object(i.b)("inlineCode",{parentName:"p"},"BufferLength")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To limit the waveform to positive values, use equal values for ",Object(i.b)("inlineCode",{parentName:"p"},"Amplitude")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Offset")))),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To produce a rectangular waveform with variable duty cycles, use ",Object(i.b)("inlineCode",{parentName:"p"},"Sawtooth")," waveform type, followed by a ",Object(i.b)("inlineCode",{parentName:"p"},"Threshold")," (Dsp) node"))))}p.isMDXComponent=!0}}]);